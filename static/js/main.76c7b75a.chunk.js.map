{"version":3,"sources":["App.tsx","routes/HomePage.tsx","routes/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","routes/PeoplePage.tsx","index.tsx"],"names":["App","_jsxs","children","_jsx","className","role","NavLink","_ref","isActive","classNames","to","_ref2","Outlet","HomePage","NotFoundPage","Loader","PersonLink","person","slug","name","sex","Link","concat","PeopleTable","people","selectedPerson","map","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorType","getPeopleWithParents","find","motherToFind","fatherToFind","_objectSpread","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","isLoading","setIsLoading","_useState5","none","_useState6","errorType","setErrorType","_useParams$slug","useParams","loadPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peopleFromServer","peopleWithParents","wrap","_context","prev","next","sent","length","noPeopleOnServer","abrupt","t0","loadingError","finish","stop","apply","arguments","useEffect","_Fragment","createRoot","document","getElementById","render","Router","Routes","Route","path","element","index","Navigate","replace"],"mappings":"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","file":"static/js/main.76c7b75a.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n  selectedPerson: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedPerson }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames(\n              { 'has-background-warning': person.slug === selectedPerson },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            <td>\n              {person.mother\n                ? (\n                  <PersonLink person={person.mother} />\n                )\n                : person.motherName || '-'}\n            </td>\n\n            <td>\n              {person.father\n                ? (\n                  <PersonLink person={person.father} />\n                )\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nimport { getPeople } from '../api';\n\nimport { Person } from '../types';\n\nenum ErrorType {\n  none,\n  loadingError,\n  noPeopleOnServer,\n}\n\nconst getPeopleWithParents = (people: Person[]) => {\n  return people.map(person => {\n    const mother = people.find(motherToFind => {\n      return motherToFind.name === person.motherName;\n    });\n\n    const father = people.find(fatherToFind => {\n      return fatherToFind.name === person.fatherName;\n    });\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorType, setErrorType] = useState<ErrorType>(ErrorType.none);\n\n  const { slug = '' } = useParams();\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const peopleFromServer = await getPeople();\n\n      if (!peopleFromServer.length) {\n        setErrorType(ErrorType.noPeopleOnServer);\n\n        return;\n      }\n\n      const peopleWithParents = getPeopleWithParents(peopleFromServer);\n\n      setPeople(peopleWithParents);\n    } catch {\n      setErrorType(ErrorType.loadingError);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {errorType === ErrorType.loadingError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {errorType === ErrorType.noPeopleOnServer && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                <PeopleTable\n                  people={people}\n                  selectedPerson={slug}\n                />\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './routes/HomePage';\nimport { NotFoundPage } from './routes/NotFoundPage';\nimport { PeoplePage } from './routes/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}